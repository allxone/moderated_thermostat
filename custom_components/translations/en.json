{
    "title": "Moderated thermostat",
    "config": {
        "step": {
            "user": {
                "title": "Create moderated thermostat",
                "description": "Create a climate entity that controls the temperature via a switch, a temperature sensor and a humidity sensor.",
                "data": {
                    "ac_mode": "Cooling mode",
                    "heater": "Actuator switch",
                    "target_sensor": "Temperature sensor",
                    "target_sensor_hum": "Humidity sensor",
                    "min_cycle_duration": "Minimum cycle duration",
                    "name": "[%key:common::config_flow::data::name%]",
                    "cold_tolerance": "Cold tolerance",
                    "hot_tolerance": "Hot tolerance",
                    "min_temp": "Minimum target temperature",
                    "max_temp": "Maximum target temperature",
                    "limit_hum": "Humidity limit"
                },
                "data_description": {
                    "ac_mode": "Set the actuator specified to be treated as a cooling device instead of a heating device.",
                    "heater": "Switch entity used to cool or heat depending on A/C mode.",
                    "target_sensor": "Temperature sensor that reflects the current temperature.",
                    "target_sensor_hum": "Humidity sensor that reflects the current humidity.",
                    "min_cycle_duration": "Set a minimum amount of time that the switch specified must be in its current state prior to being switched either off or on.",
                    "cold_tolerance": "Minimum amount of difference between the temperature read by the temperature sensor the target temperature that must change prior to being switched on. For example, if the target temperature is 25 and the tolerance is 0.5 the heater will start when the sensor goes below 24.5.",
                    "hot_tolerance": "Minimum amount of difference between the temperature read by the temperature sensor the target temperature that must change prior to being switched off. For example, if the target temperature is 25 and the tolerance is 0.5 the heater will stop when the sensor equals or goes above 25.5.",
                    "limit_hum": "The thermostat will not turn on if the humidity is above/below this value (cool/heat mode). This is useful to prevent cooling in humid conditions, which can lead to condensation and mold or to prevent heating in dry conditions, which can lead to discomfort."
                }
            },
            "presets": {
                "title": "Temperature presets",
                "data": {
                    "home_temp": "[%key:common::state::home%]",
                    "away_temp": "[%key:common::state::not_home%]",
                    "comfort_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::comfort%]",
                    "eco_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::eco%]",
                    "sleep_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::sleep%]",
                    "activity_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::activity%]"
                }
            }
        }
    },
    "options": {
        "step": {
            "init": {
                "data": {
                    "ac_mode": "[%key:component::generic_thermostat::config::step::user::data::ac_mode%]",
                    "heater": "[%key:component::generic_thermostat::config::step::user::data::heater%]",
                    "target_sensor": "[%key:component::generic_thermostat::config::step::user::data::target_sensor%]",
                    "target_sensor_hum": "[%key:component::moderated_thermostat::config::step::user::data::target_sensor_hum%]",
                    "min_cycle_duration": "[%key:component::generic_thermostat::config::step::user::data::min_cycle_duration%]",
                    "cold_tolerance": "[%key:component::generic_thermostat::config::step::user::data::cold_tolerance%]",
                    "hot_tolerance": "[%key:component::generic_thermostat::config::step::user::data::hot_tolerance%]",
                    "min_temp": "[%key:component::generic_thermostat::config::step::user::data::min_temp%]",
                    "max_temp": "[%key:component::generic_thermostat::config::step::user::data::max_temp%]",
                    "limit_hum": "[%key:component::moderated_thermostat::config::step::user::data::limit_hum%]"
                },
                "data_description": {
                    "heater": "[%key:component::generic_thermostat::config::step::user::data_description::heater%]",
                    "target_sensor": "[%key:component::generic_thermostat::config::step::user::data_description::target_sensor%]",
                    "target_sensor_hum": "[%key:component::moderated_thermostat::config::step::user::data_description::target_sensor_hum%]",
                    "ac_mode": "[%key:component::generic_thermostat::config::step::user::data_description::ac_mode%]",
                    "min_cycle_duration": "[%key:component::generic_thermostat::config::step::user::data_description::min_cycle_duration%]",
                    "cold_tolerance": "[%key:component::generic_thermostat::config::step::user::data_description::cold_tolerance%]",
                    "hot_tolerance": "[%key:component::generic_thermostat::config::step::user::data_description::hot_tolerance%]",
                    "limit_hum": "[%key:component::moderated_thermostat::config::step::user::data_description::limit_hum%]"
                }
            },
            "presets": {
                "title": "[%key:component::generic_thermostat::config::step::presets::title%]",
                "data": {
                    "home_temp": "[%key:common::state::home%]",
                    "away_temp": "[%key:common::state::not_home%]",
                    "comfort_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::comfort%]",
                    "eco_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::eco%]",
                    "sleep_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::sleep%]",
                    "activity_temp": "[%key:component::climate::entity_component::_::state_attributes::preset_mode::state::activity%]"
                }
            }
        }
    },
    "services": {
        "reload": {
            "name": "[%key:common::action::reload%]",
            "description": "Reloads moderated thermostats from the YAML-configuration."
        }
    }
}